package oop.theory.cOOPvsPOP;

/**
 * 面向对象编程 比 面向过程编程 有哪些优势？
 *
 * 1.OOP 更加能够应对大规模复杂程序的开发
 *
 * 对于大规模复杂程序的开发来说，整个程序的处理流程错综复杂，并非只有一条主线。
 * 如果把整个程序的处理流程画出来的话，会是一个网状结构。
 * 如果我们再用面向过程编程这种流程化、线性的思维方式，去翻译这个网状结构，去思考如何把程序拆解为一组顺序执行的方法，就会比较吃力
 *
 * 面向对象编程还提供了一种更加清晰的、更加模块化的代码组织方式。
 * 类就是一种非常好的组织这些函数和数据结构的方式，是一种将代码模块化的有效手段。
 *
 * 2.OOP 风格的代码更容易复用、扩展、维护
 *
 * 面向对象编程相比面向过程编程，具有更加丰富的特性（封装、抽象、继承、多态）。利用这些特性编写出来的代码，更加易扩展、易复用、易维护。
 *
 * 3.OOP 语言更加人性化、高级、智能
 *
 * 跟二进制指令、汇编语言、面向过程编程语言相比，面向对象编程语言的编程套路、思考问题的方式，是完全不一样的。
 * 前三者是一种计算机思维方式，而面向对象是一种人类的思维方式。
 * 我们在用前面三种语言编程的时候，我们是在思考，如何设计一组指令，告诉机器去执行这组指令，操作某些数据，帮我们完成某个任务。
 * 而在进行面向对象编程时候，我们是在思考如何给业务建模，如何将真实的世界映射为类或者对象，聚焦到业务本身，而不是思考如何跟机器打交道
 *
 */
public class Memo {
}
