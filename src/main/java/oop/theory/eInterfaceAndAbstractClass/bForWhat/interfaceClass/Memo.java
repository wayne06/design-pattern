package oop.theory.eInterfaceAndAbstractClass.bForWhat.interfaceClass;

/**
 * 抽象类更多的是为了代码复用，而接口就更侧重于解耦。
 *
 * 接口是对行为的一种抽象，相当于一组协议或者契约，你可以联想类比一下 API 接口。
 * 调用者只需要关注抽象的接口，不需要了解具体的实现，具体的实现代码对调用者透明。
 * 接口实现了约定和实现相分离，可以降低代码间的耦合性，提高代码的可扩展性。
 *
 * 实际上，接口是一个比抽象类应用更加广泛、更加重要的知识点。
 * 比如，我们经常提到的“基于接口而非实现编程”，就是一条几乎天天会用到，并且能极大地提高代码的灵活性、扩展性的设计思想。
 *
 */
public class Memo {
}
