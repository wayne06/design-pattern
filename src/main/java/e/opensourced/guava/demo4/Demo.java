package e.opensourced.guava.demo4;

/**
 * Immutable 模式在 Guava 中的应用
 *
 * Immutable 模式，中文叫作不变模式，它并不属于经典的 23 种设计模式，但作为一种较常用的设计思路，可以总结为一种设计模式来学习。
 *
 * 一个对象的状态在对象创建之后就不再改变，这就是所谓的不变模式。
 * 其中涉及的类就是不变类（Immutable Class），对象就是不变对象（Immutable Object）。
 * 在 Java 中，最常用的不变类就是 String 类，String 对象一旦创建之后就无法改变。
 *
 * 不变模式可以分为两类，一类是普通不变模式，另一类是深度不变模式（Deeply Immutable Pattern）。
 * 普通的不变模式指的是，对象中包含的引用对象是可以改变的。如果不特别说明，通常我们所说的不变模式，指的就是普通的不变模式。
 * 深度不变模式指的是，对象包含的引用对象也不可变。它们两个之间的关系，有点类似之前讲过的浅拷贝和深拷贝之间的关系
 *
 * 在某个业务场景下，如果一个对象符合创建之后就不会被修改这个特性，那我们就可以把它设计成不变类。显式地强制它不可变，这样能避免意外被修改。
 * 那如何建立一个不变类呢？方法很简单，只要这个类满足：所有的成员变量都通过构造函数一次性设置好，不暴露任何 set 等修改成员变量的方法。
 * 除此之外，因为数据不变，所以不存在并发读写问题，因此不变模式常用在多线程环境下，来避免线程加锁。所以，不变模式也常被归类为多线程设计模式。
 *
 */
public class Demo {
}
